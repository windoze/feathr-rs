/*
 * Jobs API 2.1
 *
 * The Jobs API allows you to create, edit, and delete jobs.
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SparkNode {
    /// Private IP address (typically a 10.x.x.x address) of the Spark node. This is different from the private IP address of the host instance.
    #[serde(rename = "private_ip", skip_serializing_if = "Option::is_none")]
    pub private_ip: Option<String>,
    /// Public DNS address of this node. This address can be used to access the Spark JDBC server on the driver node.
    #[serde(rename = "public_dns", skip_serializing_if = "Option::is_none")]
    pub public_dns: Option<String>,
    /// Globally unique identifier for this node.
    #[serde(rename = "node_id", skip_serializing_if = "Option::is_none")]
    pub node_id: Option<String>,
    /// Globally unique identifier for the host instance from the cloud provider.
    #[serde(rename = "instance_id", skip_serializing_if = "Option::is_none")]
    pub instance_id: Option<String>,
    /// The timestamp (in millisecond) when the Spark node is launched.
    #[serde(rename = "start_timestamp", skip_serializing_if = "Option::is_none")]
    pub start_timestamp: Option<i64>,
    /// The private IP address of the host instance.
    #[serde(rename = "host_private_ip", skip_serializing_if = "Option::is_none")]
    pub host_private_ip: Option<String>,
}

impl SparkNode {
    pub fn new() -> SparkNode {
        SparkNode {
            private_ip: None,
            public_dns: None,
            node_id: None,
            instance_id: None,
            start_timestamp: None,
            host_private_ip: None,
        }
    }
}


