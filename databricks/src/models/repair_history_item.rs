/*
 * Jobs API 2.1
 *
 * The Jobs API allows you to create, edit, and delete jobs.
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RepairHistoryItem {
    /// The repair history item type. Indicates whether a run is the original run or a repair run.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// The start time of the (repaired) run.
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<i64>,
    /// The end time of the (repaired) run.
    #[serde(rename = "end_time", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<i64>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<Box<crate::models::RunState>>,
    /// The ID of the repair. Only returned for the items that represent a repair in `repair_history`.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// The run IDs of the task runs that ran as part of this repair history item.
    #[serde(rename = "task_run_ids", skip_serializing_if = "Option::is_none")]
    pub task_run_ids: Option<Vec<i64>>,
}

impl RepairHistoryItem {
    pub fn new() -> RepairHistoryItem {
        RepairHistoryItem {
            _type: None,
            start_time: None,
            end_time: None,
            state: None,
            id: None,
            task_run_ids: None,
        }
    }
}

/// The repair history item type. Indicates whether a run is the original run or a repair run.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "ORIGINAL")]
    ORIGINAL,
    #[serde(rename = "REPAIR")]
    REPAIR,
}

impl Default for Type {
    fn default() -> Type {
        Self::ORIGINAL
    }
}

