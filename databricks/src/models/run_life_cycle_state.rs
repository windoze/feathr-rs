/*
 * Jobs API 2.1
 *
 * The Jobs API allows you to create, edit, and delete jobs.
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// RunLifeCycleState : * `PENDING`: The run has been triggered. If there is not already an active run of the same job, the cluster and execution context are being prepared. If there is already an active run of the same job, the run immediately transitions into the `SKIPPED` state without preparing any resources. * `RUNNING`: The task of this run is being executed. * `TERMINATING`: The task of this run has completed, and the cluster and execution context are being cleaned up. * `TERMINATED`: The task of this run has completed, and the cluster and execution context have been cleaned up. This state is terminal. * `SKIPPED`: This run was aborted because a previous run of the same job was already active. This state is terminal. * `INTERNAL_ERROR`: An exceptional state that indicates a failure in the Jobs service, such as network failure over a long period. If a run on a new cluster ends in the `INTERNAL_ERROR` state, the Jobs service terminates the cluster as soon as possible. This state is terminal.

/// * `PENDING`: The run has been triggered. If there is not already an active run of the same job, the cluster and execution context are being prepared. If there is already an active run of the same job, the run immediately transitions into the `SKIPPED` state without preparing any resources. * `RUNNING`: The task of this run is being executed. * `TERMINATING`: The task of this run has completed, and the cluster and execution context are being cleaned up. * `TERMINATED`: The task of this run has completed, and the cluster and execution context have been cleaned up. This state is terminal. * `SKIPPED`: This run was aborted because a previous run of the same job was already active. This state is terminal. * `INTERNAL_ERROR`: An exceptional state that indicates a failure in the Jobs service, such as network failure over a long period. If a run on a new cluster ends in the `INTERNAL_ERROR` state, the Jobs service terminates the cluster as soon as possible. This state is terminal.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RunLifeCycleState {
    #[serde(rename = "PENDING")]
    PENDING,
    #[serde(rename = "RUNNING")]
    RUNNING,
    #[serde(rename = "TERMINATING")]
    TERMINATING,
    #[serde(rename = "TERMINATED")]
    TERMINATED,
    #[serde(rename = "SKIPPED")]
    SKIPPED,
    #[serde(rename = "INTERNAL_ERROR")]
    INTERNALERROR,

}

impl ToString for RunLifeCycleState {
    fn to_string(&self) -> String {
        match self {
            Self::PENDING => String::from("PENDING"),
            Self::RUNNING => String::from("RUNNING"),
            Self::TERMINATING => String::from("TERMINATING"),
            Self::TERMINATED => String::from("TERMINATED"),
            Self::SKIPPED => String::from("SKIPPED"),
            Self::INTERNALERROR => String::from("INTERNAL_ERROR"),
        }
    }
}

impl Default for RunLifeCycleState {
    fn default() -> RunLifeCycleState {
        Self::PENDING
    }
}




